/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_jac_g_leg_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[40] = {36, 1, 0, 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35};
static const casadi_int casadi_s1[18] = {14, 1, 0, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
static const casadi_int casadi_s2[200] = {28, 36, 0, 1, 2, 3, 8, 13, 16, 18, 20, 22, 26, 32, 38, 45, 52, 60, 67, 74, 82, 89, 96, 104, 111, 118, 126, 127, 128, 129, 134, 139, 142, 143, 144, 145, 149, 155, 161, 0, 1, 2, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 0, 6, 1, 7, 2, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11, 0, 6, 9, 10, 11, 12, 13, 1, 7, 9, 10, 11, 14, 15, 2, 8, 9, 10, 12, 13, 14, 15, 0, 6, 9, 10, 11, 16, 17, 1, 7, 9, 10, 11, 18, 19, 2, 8, 9, 10, 16, 17, 18, 19, 0, 6, 9, 10, 11, 20, 21, 1, 7, 9, 10, 11, 22, 23, 2, 8, 9, 10, 20, 21, 22, 23, 0, 6, 9, 10, 11, 24, 25, 1, 7, 9, 10, 11, 26, 27, 2, 8, 9, 10, 24, 25, 26, 27, 0, 1, 2, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 6, 7, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11};

/* eval_jac_g_leg:(w[36],p[14])->(jac_g[28x36,161nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a8, a9;
  a0=-1.;
  if (res[0]!=0) res[0][0]=a0;
  if (res[0]!=0) res[0][1]=a0;
  if (res[0]!=0) res[0][2]=a0;
  a1=5.0000000000000000e-001;
  a2=arg[0]? arg[0][3] : 0;
  a3=arg[0]? arg[0][27] : 0;
  a2=(a2+a3);
  a3=2.;
  a2=(a2/a3);
  a4=sin(a2);
  a5=arg[0]? arg[0][11] : 0;
  a6=arg[0]? arg[0][35] : 0;
  a7=(a5+a6);
  a7=(a7/a3);
  a8=arg[0]? arg[0][4] : 0;
  a9=arg[0]? arg[0][28] : 0;
  a8=(a8+a9);
  a8=(a8/a3);
  a9=sin(a8);
  a10=cos(a8);
  a11=(a9/a10);
  a12=(a7*a11);
  a12=(a4*a12);
  a13=cos(a2);
  a14=arg[0]? arg[0][10] : 0;
  a15=arg[0]? arg[0][34] : 0;
  a16=(a14+a15);
  a16=(a16/a3);
  a17=(a9/a10);
  a18=(a16*a17);
  a18=(a13*a18);
  a12=(a12-a18);
  a12=(a1*a12);
  a18=arg[1]? arg[1][0] : 0;
  a19=(1./a18);
  a20=(a12-a19);
  if (res[0]!=0) res[0][3]=a20;
  a20=(a13*a7);
  a21=(a4*a16);
  a20=(a20+a21);
  a20=(a1*a20);
  if (res[0]!=0) res[0][4]=a20;
  a21=(a7/a10);
  a21=(a4*a21);
  a22=(a16/a10);
  a22=(a13*a22);
  a21=(a21-a22);
  a21=(a1*a21);
  if (res[0]!=0) res[0][5]=a21;
  a22=22354293482292820.;
  a23=-1.3877787807814460e-017;
  a24=arg[0]? arg[0][9] : 0;
  a25=arg[0]? arg[0][33] : 0;
  a26=(a24+a25);
  a26=(a26/a3);
  a27=(a23*a26);
  a28=(a22*a27);
  a29=(a16*a28);
  a30=-4.8802931580173908e-001;
  a6=(a6-a5);
  a5=(a6/a18);
  a5=(a30*a5);
  a29=(a29+a5);
  a29=(a13*a29);
  a5=26445640661418040.;
  a27=(a5*a27);
  a31=(a7*a27);
  a32=4.3125046780173909e-001;
  a15=(a15-a14);
  a14=(a15/a18);
  a14=(a32*a14);
  a31=(a31+a14);
  a31=(a4*a31);
  a29=(a29-a31);
  a29=(a1*a29);
  if (res[0]!=0) res[0][6]=a29;
  a31=-3.6700698954086958e-001;
  a14=(a26*a7);
  a33=(a14*a10);
  a33=(a31*a33);
  a15=(a15/a18);
  a15=(a32*a15);
  a34=(a10*a15);
  a33=(a33+a34);
  a13=(a13*a33);
  a33=(a26*a16);
  a34=3.1022814154086947e-001;
  a35=(a34*a10);
  a36=(a33*a35);
  a37=4.8802931580173908e-001;
  a6=(a6/a18);
  a6=(a37*a6);
  a38=(a10*a6);
  a36=(a36+a38);
  a4=(a4*a36);
  a13=(a13-a4);
  a13=(a1*a13);
  if (res[0]!=0) res[0][7]=a13;
  a4=cos(a8);
  a36=sin(a2);
  a38=(a16*a36);
  a39=(a38/a10);
  a2=cos(a2);
  a40=(a7*a2);
  a41=(a40/a10);
  a39=(a39+a41);
  a39=(a4*a39);
  a8=sin(a8);
  a41=(a26*a10);
  a40=(a40*a9);
  a41=(a41+a40);
  a38=(a38*a9);
  a41=(a41+a38);
  a41=(a41/a10);
  a41=(a41/a10);
  a38=(a26/a10);
  a41=(a41-a38);
  a41=(a8*a41);
  a39=(a39+a41);
  a39=(a1*a39);
  a39=(-a39);
  if (res[0]!=0) res[0][8]=a39;
  a41=(1./a18);
  a38=(-a41);
  if (res[0]!=0) res[0][9]=a38;
  a38=(a7*a2);
  a40=(a16*a36);
  a38=(a38+a40);
  a38=(a38/a10);
  a38=(a38/a10);
  a38=(a8*a38);
  a38=(a1*a38);
  a38=(-a38);
  if (res[0]!=0) res[0][10]=a38;
  a40=arg[1]? arg[1][12] : 0;
  a42=arg[0]? arg[0][21] : 0;
  a43=(a40*a42);
  a44=arg[1]? arg[1][11] : 0;
  a45=arg[0]? arg[0][22] : 0;
  a46=(a44*a45);
  a43=(a43-a46);
  a46=arg[1]? arg[1][8] : 0;
  a47=arg[0]? arg[0][19] : 0;
  a48=(a46*a47);
  a43=(a43-a48);
  a48=arg[1]? arg[1][9] : 0;
  a49=arg[0]? arg[0][18] : 0;
  a50=(a48*a49);
  a43=(a43+a50);
  a50=arg[1]? arg[1][5] : 0;
  a51=arg[0]? arg[0][16] : 0;
  a52=(a50*a51);
  a43=(a43-a52);
  a52=arg[1]? arg[1][6] : 0;
  a53=arg[0]? arg[0][15] : 0;
  a54=(a52*a53);
  a43=(a43+a54);
  a54=arg[1]? arg[1][3] : 0;
  a55=arg[0]? arg[0][12] : 0;
  a56=(a54*a55);
  a43=(a43+a56);
  a56=arg[1]? arg[1][2] : 0;
  a57=arg[0]? arg[0][13] : 0;
  a58=(a56*a57);
  a43=(a43-a58);
  a43=(a4*a43);
  a58=arg[0]? arg[0][5] : 0;
  a59=arg[0]? arg[0][29] : 0;
  a58=(a58+a59);
  a58=(a58/a3);
  a3=cos(a58);
  a59=(a40*a3);
  a60=sin(a58);
  a61=(a44*a60);
  a59=(a59-a61);
  a61=arg[0]? arg[0][23] : 0;
  a62=(a59*a61);
  a63=arg[1]? arg[1][13] : 0;
  a64=(a3*a45);
  a64=(a63*a64);
  a62=(a62-a64);
  a64=(a60*a42);
  a64=(a63*a64);
  a62=(a62+a64);
  a64=(a48*a3);
  a65=(a46*a60);
  a64=(a64-a65);
  a65=arg[0]? arg[0][20] : 0;
  a66=(a64*a65);
  a62=(a62+a66);
  a66=arg[1]? arg[1][10] : 0;
  a67=(a3*a47);
  a67=(a66*a67);
  a62=(a62-a67);
  a67=(a60*a49);
  a67=(a66*a67);
  a62=(a62+a67);
  a67=(a52*a3);
  a68=(a50*a60);
  a67=(a67-a68);
  a68=arg[0]? arg[0][17] : 0;
  a69=(a67*a68);
  a62=(a62+a69);
  a69=arg[1]? arg[1][7] : 0;
  a70=(a3*a51);
  a70=(a69*a70);
  a62=(a62-a70);
  a70=(a60*a53);
  a70=(a69*a70);
  a62=(a62+a70);
  a70=(a54*a3);
  a71=(a56*a60);
  a70=(a70-a71);
  a71=arg[0]? arg[0][14] : 0;
  a72=(a70*a71);
  a62=(a62+a72);
  a72=arg[1]? arg[1][4] : 0;
  a73=(a60*a55);
  a73=(a72*a73);
  a62=(a62+a73);
  a73=(a3*a57);
  a73=(a72*a73);
  a62=(a62-a73);
  a62=(a8*a62);
  a43=(a43-a62);
  a43=(a1*a43);
  if (res[0]!=0) res[0][11]=a43;
  a62=-5.6778848000000048e-002;
  a73=(a16*a7);
  a73=(a62*a73);
  a74=-1.2102232626086960e-001;
  a25=(a25-a24);
  a25=(a25/a18);
  a25=(a74*a25);
  a73=(a73+a25);
  a4=(a4*a73);
  a31=(a31*a36);
  a14=(a14*a31);
  a33=(a33*a2);
  a34=(a34*a33);
  a14=(a14+a34);
  a6=(a2*a6);
  a14=(a14+a6);
  a15=(a36*a15);
  a14=(a14+a15);
  a8=(a8*a14);
  a4=(a4-a8);
  a4=(a1*a4);
  if (res[0]!=0) res[0][12]=a4;
  a8=(1./a18);
  a14=(-a8);
  if (res[0]!=0) res[0][13]=a14;
  a14=cos(a58);
  a15=(a63*a10);
  a6=(a15*a42);
  a34=(a10*a61);
  a33=(a44*a34);
  a6=(a6-a33);
  a33=(a10*a65);
  a73=(a46*a33);
  a6=(a6-a73);
  a73=(a66*a10);
  a25=(a73*a49);
  a6=(a6+a25);
  a25=(a10*a68);
  a24=(a50*a25);
  a6=(a6-a24);
  a24=(a69*a10);
  a75=(a24*a53);
  a6=(a6+a75);
  a75=(a10*a71);
  a76=(a56*a75);
  a6=(a6-a76);
  a76=(a72*a10);
  a77=(a76*a55);
  a6=(a6+a77);
  a6=(a14*a6);
  a58=sin(a58);
  a34=(a40*a34);
  a77=(a63*a10);
  a78=(a77*a45);
  a34=(a34-a78);
  a33=(a48*a33);
  a34=(a34+a33);
  a33=(a66*a10);
  a78=(a33*a47);
  a34=(a34-a78);
  a25=(a52*a25);
  a34=(a34+a25);
  a25=(a69*a10);
  a78=(a25*a51);
  a34=(a34-a78);
  a75=(a54*a75);
  a34=(a34+a75);
  a75=(a72*a10);
  a78=(a75*a57);
  a34=(a34-a78);
  a34=(a58*a34);
  a6=(a6-a34);
  a6=(a1*a6);
  if (res[0]!=0) res[0][14]=a6;
  a45=(a63*a45);
  a34=(a40*a61);
  a45=(a45-a34);
  a34=(a48*a65);
  a45=(a45-a34);
  a47=(a66*a47);
  a45=(a45+a47);
  a47=(a52*a68);
  a45=(a45-a47);
  a51=(a69*a51);
  a45=(a45+a51);
  a57=(a72*a57);
  a45=(a45+a57);
  a57=(a54*a71);
  a45=(a45-a57);
  a14=(a14*a45);
  a42=(a63*a42);
  a61=(a44*a61);
  a42=(a42-a61);
  a65=(a46*a65);
  a42=(a42-a65);
  a49=(a66*a49);
  a42=(a42+a49);
  a68=(a50*a68);
  a42=(a42-a68);
  a53=(a69*a53);
  a42=(a42+a53);
  a55=(a72*a55);
  a42=(a42+a55);
  a71=(a56*a71);
  a42=(a42-a71);
  a58=(a58*a42);
  a14=(a14-a58);
  a14=(a1*a14);
  if (res[0]!=0) res[0][15]=a14;
  a58=(-a18);
  if (res[0]!=0) res[0][16]=a58;
  if (res[0]!=0) res[0][17]=a0;
  a58=(-a18);
  if (res[0]!=0) res[0][18]=a58;
  if (res[0]!=0) res[0][19]=a0;
  a58=(-a18);
  if (res[0]!=0) res[0][20]=a58;
  if (res[0]!=0) res[0][21]=a0;
  a58=-5.0000000000000000e-001;
  if (res[0]!=0) res[0][22]=a58;
  a42=1.2102232626086960e-001;
  a42=(a42/a18);
  a71=(-a42);
  if (res[0]!=0) res[0][23]=a71;
  a71=(a7*a2);
  a5=(a5*a71);
  a71=(a16*a36);
  a22=(a22*a71);
  a5=(a5+a22);
  a23=(a23*a5);
  a23=(a1*a23);
  if (res[0]!=0) res[0][24]=a23;
  a31=(a10*a31);
  a5=(a7*a31);
  a35=(a2*a35);
  a22=(a16*a35);
  a5=(a5+a22);
  a5=(a1*a5);
  a74=(a74*a9);
  a74=(a74/a18);
  a22=(a5-a74);
  if (res[0]!=0) res[0][25]=a22;
  a17=(a36*a17);
  a17=(a1*a17);
  a17=(-a17);
  if (res[0]!=0) res[0][26]=a17;
  a22=(a1*a2);
  a22=(-a22);
  if (res[0]!=0) res[0][27]=a22;
  a71=(a36/a10);
  a71=(a1*a71);
  a71=(-a71);
  if (res[0]!=0) res[0][28]=a71;
  a55=5.6778848000000048e-002;
  a53=(a55*a7);
  a53=(a1*a53);
  if (res[0]!=0) res[0][29]=a53;
  a28=(a36*a28);
  a28=(a1*a28);
  a68=(a32*a2);
  a68=(a68/a18);
  a49=(a28-a68);
  if (res[0]!=0) res[0][30]=a49;
  a35=(a26*a35);
  a62=(a62*a9);
  a7=(a7*a62);
  a35=(a35+a7);
  a35=(a1*a35);
  a7=(a10*a36);
  a32=(a32*a7);
  a32=(a32/a18);
  a7=(a35-a32);
  if (res[0]!=0) res[0][31]=a7;
  a11=(a2*a11);
  a11=(a1*a11);
  a11=(-a11);
  if (res[0]!=0) res[0][32]=a11;
  a7=(a1*a36);
  if (res[0]!=0) res[0][33]=a7;
  a49=(a2/a10);
  a49=(a1*a49);
  a49=(-a49);
  if (res[0]!=0) res[0][34]=a49;
  a55=(a55*a16);
  a55=(a1*a55);
  if (res[0]!=0) res[0][35]=a55;
  a27=(a2*a27);
  a27=(a1*a27);
  a30=(a30*a36);
  a30=(a30/a18);
  a36=(a27-a30);
  if (res[0]!=0) res[0][36]=a36;
  a26=(a26*a31);
  a16=(a16*a62);
  a26=(a26+a16);
  a26=(a1*a26);
  a2=(a2*a10);
  a37=(a37*a2);
  a37=(a37/a18);
  a2=(a26-a37);
  if (res[0]!=0) res[0][37]=a2;
  a2=7.5187969924812026e-002;
  a16=casadi_sq(a18);
  a62=(a1*a16);
  a62=(a2*a62);
  a62=(-a62);
  if (res[0]!=0) res[0][38]=a62;
  a31=(a2*a18);
  a31=(-a31);
  if (res[0]!=0) res[0][39]=a31;
  a36=(a54*a9);
  a76=(a76*a60);
  a36=(a36+a76);
  if (res[0]!=0) res[0][40]=a36;
  a36=(a72*a3);
  if (res[0]!=0) res[0][41]=a36;
  a36=(-a54);
  if (res[0]!=0) res[0][42]=a36;
  a36=1.;
  if (res[0]!=0) res[0][43]=a36;
  if (res[0]!=0) res[0][44]=a0;
  a76=(a1*a16);
  a76=(a2*a76);
  a76=(-a76);
  if (res[0]!=0) res[0][45]=a76;
  a65=(a2*a18);
  a65=(-a65);
  if (res[0]!=0) res[0][46]=a65;
  a61=(a56*a9);
  a75=(a75*a3);
  a61=(a61+a75);
  a61=(-a61);
  if (res[0]!=0) res[0][47]=a61;
  a72=(a72*a60);
  if (res[0]!=0) res[0][48]=a72;
  if (res[0]!=0) res[0][49]=a56;
  if (res[0]!=0) res[0][50]=a36;
  if (res[0]!=0) res[0][51]=a0;
  a1=(a1*a16);
  a1=(a2*a1);
  a1=(-a1);
  if (res[0]!=0) res[0][52]=a1;
  a2=(a2*a18);
  a2=(-a2);
  if (res[0]!=0) res[0][53]=a2;
  a70=(a10*a70);
  if (res[0]!=0) res[0][54]=a70;
  a56=(a56*a3);
  a54=(a54*a60);
  a56=(a56+a54);
  a56=(-a56);
  if (res[0]!=0) res[0][55]=a56;
  a56=arg[1]? arg[1][1] : 0;
  a54=(-a56);
  if (res[0]!=0) res[0][56]=a54;
  a54=(-a56);
  if (res[0]!=0) res[0][57]=a54;
  a54=(-a56);
  if (res[0]!=0) res[0][58]=a54;
  a54=(-a56);
  if (res[0]!=0) res[0][59]=a54;
  if (res[0]!=0) res[0][60]=a62;
  if (res[0]!=0) res[0][61]=a31;
  a54=(a52*a9);
  a24=(a24*a60);
  a54=(a54+a24);
  if (res[0]!=0) res[0][62]=a54;
  a54=(a69*a3);
  if (res[0]!=0) res[0][63]=a54;
  a54=(-a52);
  if (res[0]!=0) res[0][64]=a54;
  if (res[0]!=0) res[0][65]=a36;
  if (res[0]!=0) res[0][66]=a0;
  if (res[0]!=0) res[0][67]=a76;
  if (res[0]!=0) res[0][68]=a65;
  a54=(a50*a9);
  a25=(a25*a3);
  a54=(a54+a25);
  a54=(-a54);
  if (res[0]!=0) res[0][69]=a54;
  a69=(a69*a60);
  if (res[0]!=0) res[0][70]=a69;
  if (res[0]!=0) res[0][71]=a50;
  if (res[0]!=0) res[0][72]=a36;
  if (res[0]!=0) res[0][73]=a0;
  if (res[0]!=0) res[0][74]=a1;
  if (res[0]!=0) res[0][75]=a2;
  a67=(a10*a67);
  if (res[0]!=0) res[0][76]=a67;
  a50=(a50*a3);
  a52=(a52*a60);
  a50=(a50+a52);
  a50=(-a50);
  if (res[0]!=0) res[0][77]=a50;
  a50=(-a56);
  if (res[0]!=0) res[0][78]=a50;
  a50=(-a56);
  if (res[0]!=0) res[0][79]=a50;
  a50=(-a56);
  if (res[0]!=0) res[0][80]=a50;
  a50=(-a56);
  if (res[0]!=0) res[0][81]=a50;
  if (res[0]!=0) res[0][82]=a62;
  if (res[0]!=0) res[0][83]=a31;
  a50=(a48*a9);
  a73=(a73*a60);
  a50=(a50+a73);
  if (res[0]!=0) res[0][84]=a50;
  a50=(a66*a3);
  if (res[0]!=0) res[0][85]=a50;
  a50=(-a48);
  if (res[0]!=0) res[0][86]=a50;
  if (res[0]!=0) res[0][87]=a36;
  if (res[0]!=0) res[0][88]=a0;
  if (res[0]!=0) res[0][89]=a76;
  if (res[0]!=0) res[0][90]=a65;
  a50=(a46*a9);
  a33=(a33*a3);
  a50=(a50+a33);
  a50=(-a50);
  if (res[0]!=0) res[0][91]=a50;
  a66=(a66*a60);
  if (res[0]!=0) res[0][92]=a66;
  if (res[0]!=0) res[0][93]=a46;
  if (res[0]!=0) res[0][94]=a36;
  if (res[0]!=0) res[0][95]=a0;
  if (res[0]!=0) res[0][96]=a1;
  if (res[0]!=0) res[0][97]=a2;
  a64=(a10*a64);
  if (res[0]!=0) res[0][98]=a64;
  a46=(a46*a3);
  a48=(a48*a60);
  a46=(a46+a48);
  a46=(-a46);
  if (res[0]!=0) res[0][99]=a46;
  a46=(-a56);
  if (res[0]!=0) res[0][100]=a46;
  a46=(-a56);
  if (res[0]!=0) res[0][101]=a46;
  a46=(-a56);
  if (res[0]!=0) res[0][102]=a46;
  a46=(-a56);
  if (res[0]!=0) res[0][103]=a46;
  if (res[0]!=0) res[0][104]=a62;
  if (res[0]!=0) res[0][105]=a31;
  a31=(a40*a9);
  a15=(a15*a60);
  a31=(a31+a15);
  if (res[0]!=0) res[0][106]=a31;
  a31=(a63*a3);
  if (res[0]!=0) res[0][107]=a31;
  a31=(-a40);
  if (res[0]!=0) res[0][108]=a31;
  if (res[0]!=0) res[0][109]=a36;
  if (res[0]!=0) res[0][110]=a0;
  if (res[0]!=0) res[0][111]=a76;
  if (res[0]!=0) res[0][112]=a65;
  a9=(a44*a9);
  a77=(a77*a3);
  a9=(a9+a77);
  a9=(-a9);
  if (res[0]!=0) res[0][113]=a9;
  a63=(a63*a60);
  if (res[0]!=0) res[0][114]=a63;
  if (res[0]!=0) res[0][115]=a44;
  if (res[0]!=0) res[0][116]=a36;
  if (res[0]!=0) res[0][117]=a0;
  if (res[0]!=0) res[0][118]=a1;
  if (res[0]!=0) res[0][119]=a2;
  a10=(a10*a59);
  if (res[0]!=0) res[0][120]=a10;
  a44=(a44*a3);
  a40=(a40*a60);
  a44=(a44+a40);
  a44=(-a44);
  if (res[0]!=0) res[0][121]=a44;
  a44=(-a56);
  if (res[0]!=0) res[0][122]=a44;
  a44=(-a56);
  if (res[0]!=0) res[0][123]=a44;
  a44=(-a56);
  if (res[0]!=0) res[0][124]=a44;
  a56=(-a56);
  if (res[0]!=0) res[0][125]=a56;
  if (res[0]!=0) res[0][126]=a36;
  if (res[0]!=0) res[0][127]=a36;
  if (res[0]!=0) res[0][128]=a36;
  a12=(a12+a19);
  if (res[0]!=0) res[0][129]=a12;
  if (res[0]!=0) res[0][130]=a20;
  if (res[0]!=0) res[0][131]=a21;
  if (res[0]!=0) res[0][132]=a29;
  if (res[0]!=0) res[0][133]=a13;
  if (res[0]!=0) res[0][134]=a39;
  if (res[0]!=0) res[0][135]=a41;
  if (res[0]!=0) res[0][136]=a38;
  if (res[0]!=0) res[0][137]=a43;
  if (res[0]!=0) res[0][138]=a4;
  if (res[0]!=0) res[0][139]=a8;
  if (res[0]!=0) res[0][140]=a6;
  if (res[0]!=0) res[0][141]=a14;
  if (res[0]!=0) res[0][142]=a36;
  if (res[0]!=0) res[0][143]=a36;
  if (res[0]!=0) res[0][144]=a36;
  if (res[0]!=0) res[0][145]=a58;
  if (res[0]!=0) res[0][146]=a42;
  if (res[0]!=0) res[0][147]=a23;
  a74=(a74+a5);
  if (res[0]!=0) res[0][148]=a74;
  if (res[0]!=0) res[0][149]=a17;
  if (res[0]!=0) res[0][150]=a22;
  if (res[0]!=0) res[0][151]=a71;
  if (res[0]!=0) res[0][152]=a53;
  a68=(a68+a28);
  if (res[0]!=0) res[0][153]=a68;
  a32=(a32+a35);
  if (res[0]!=0) res[0][154]=a32;
  if (res[0]!=0) res[0][155]=a11;
  if (res[0]!=0) res[0][156]=a7;
  if (res[0]!=0) res[0][157]=a49;
  if (res[0]!=0) res[0][158]=a55;
  a30=(a30+a27);
  if (res[0]!=0) res[0][159]=a30;
  a37=(a37+a26);
  if (res[0]!=0) res[0][160]=a37;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_jac_g_leg_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_name_out(casadi_int i){
  switch (i) {
    case 0: return "jac_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


